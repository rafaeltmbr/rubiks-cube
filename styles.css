html,
body {
  height: 100%;
  overflow: hidden;
  margin: 0;
  padding: 0;
  background-image: linear-gradient(to bottom, rgb(190, 233, 253), rgb(230, 247, 255));
}

body {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
}

.main-container {
  height: 100%;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  --cube-size: min(50vh, 50vw);
}

.main-container .cube-wrapper {
  height: calc(var(--cube-size) * 1.35);
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  perspective-origin: center;
  perspective: min(250vh, 250vw);
}

.main-container .cube-wrapper .rubiks-cube {
  width: var(--size);
  height: var(--size);
  position: relative;
  transform-style: preserve-3d;
  transform: rotateX(-30deg) rotateY(-45deg);
  transition: transform var(--animation-duration);

  --size: var(--cube-size);
  --half-size: calc(var(--size) / 2);
  --half-size-neg: calc(var(--size) / -2);
  --crx: 0deg;
  --cry: 0deg;
  --animation-duration: 300ms;
}

.main-container .cube-wrapper .rubiks-cube * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  pointer-events: none;
}

.main-container .cube-wrapper .rubiks-cube .face {
  --translation: translate3d(0, 0, var(--half-size));
}

.main-container .cube-wrapper .rubiks-cube .face {
  width: var(--size);
  height: var(--size);
  position: absolute;
  transform-style: preserve-3d;
  top: 0;
  left: 0;

  --border-width: calc(var(--size) / 70);
}

.main-container .cube-wrapper .rubiks-cube .face.bottom:after {
  content: '';
  display: block;
  height: calc(100% - (var(--margin) * 2));
  width: 100%;
  background-color: rgb(0, 0, 0);
  margin-top: var(--margin);
  transform: rotateY(45deg);
  --margin: calc(var(--size) * 0.15);
}

.main-container .cube-wrapper .rubiks-cube .face .piece {
  position: absolute;
  width: calc(var(--size) / 3);
  height: calc(var(--size) / 3);
  transition-duration: var(--animation-duration);
  transform: var(--translation) var(--rotation);
  transform-style: preserve-3d;
  cursor: grab;
  background-color: #000;
  pointer-events: all;
  --piece-border-radius: calc(var(--border-width) * 2);
  --second-position: calc(var(--size) / 3);
  --third-position: calc(var(--size) / 3 * 2);
}

.main-container .cube-wrapper .rubiks-cube .face .piece:active {
  cursor: grabbing;
}

.main-container .cube-wrapper .rubiks-cube .face .piece:after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  border: var(--border-width) solid #000;
  border-radius: calc(var(--border-width) * 3);
  backface-visibility: hidden;
}

.main-container .cube-wrapper .rubiks-cube .face.front .piece:after {
  background-color: rgb(0, 155, 72);
}

.main-container .cube-wrapper .rubiks-cube .face.right .piece:after {
  background-color: rgb(183, 18, 52);
}

.main-container .cube-wrapper .rubiks-cube .face.left .piece:after {
  background-color: rgb(255, 88, 0);
}

.main-container .cube-wrapper .rubiks-cube .face.back .piece:after {
  background-color: rgb(0, 70, 173);
}

.main-container .cube-wrapper .rubiks-cube .face.top .piece:after {
  background-color: rgb(255, 255, 255);
}

.main-container .cube-wrapper .rubiks-cube .face.bottom .piece:after {
  background-color: rgb(255, 213, 0);
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='1'] {
  top: 0;
  left: 0;
  transform-origin: 150% 150% var(--half-size-neg);
  border-radius: var(--piece-border-radius) var(--piece-border-radius) 0 var(--piece-border-radius);
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='2'] {
  top: 0;
  left: var(--second-position);
  transform-origin: 50% 150% var(--half-size-neg);
  border-radius: var(--piece-border-radius) var(--piece-border-radius) 0 0;
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='3'] {
  top: 0;
  left: var(--third-position);
  transform-origin: -50% 150% var(--half-size-neg);
  border-radius: var(--piece-border-radius) var(--piece-border-radius) var(--piece-border-radius) 0;
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='4'] {
  top: var(--second-position);
  left: 0;
  transform-origin: 150% 50% var(--half-size-neg);
  border-radius: var(--piece-border-radius) 0 0 var(--piece-border-radius);
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='5'] {
  top: var(--second-position);
  left: var(--second-position);
  transform-origin: 50% 50% var(--half-size-neg);
  border-radius: 0;
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='6'] {
  top: var(--second-position);
  left: var(--third-position);
  transform-origin: -50% 50% var(--half-size-neg);
  border-radius: 0 var(--piece-border-radius) var(--piece-border-radius) 0;
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='7'] {
  top: var(--third-position);
  left: 0;
  transform-origin: 150% -50% var(--half-size-neg);
  border-radius: var(--piece-border-radius) 0 var(--piece-border-radius) var(--piece-border-radius);
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='8'] {
  top: var(--third-position);
  left: var(--second-position);
  transform-origin: 50% -50% var(--half-size-neg);
  border-radius: 0 0 var(--piece-border-radius) var(--piece-border-radius);
}

.main-container .cube-wrapper .rubiks-cube .face .piece[data-index='9'] {
  top: var(--third-position);
  left: var(--third-position);
  transform-origin: -50% -50% var(--half-size-neg);
  border-radius: 0 var(--piece-border-radius) var(--piece-border-radius) var(--piece-border-radius);
}

.main-container .controls {
  position: absolute;
  height: calc(var(--cube-size) * 1.8);
  transform: translateY(calc(var(--cube-size) * 0.05));
  -webkit-tap-highlight-color: transparent;
  width: 100%;
}

.main-container .controls > * {
  position: absolute;
  cursor: pointer;
  width: 50%;
}

.main-container .controls .rotate-top-to-left {
  left: 0;
  bottom: 0;
  height: 25%;
}

.main-container .controls .rotate-top-to-right {
  right: 0;
  bottom: 0;
  height: 25%;
}

.main-container .controls .rotate-left-to-top {
  height: 25%;
  top: 0;
  right: 0;
}

.main-container .controls .rotate-right-to-top {
  height: 25%;
  top: 0;
  left: 0;
}

.main-container .controls .rotate-right {
  top: 25%;
  right: 0;
  height: 50%;
}

.main-container .controls .rotate-left {
  top: 25%;
  left: 0;
  height: 50%;
}

.main-container .controls > * > * {
  font-size: calc(var(--cube-size) * 0.1);
  color: rgb(84, 149, 223);
}

.main-container .controls > *:hover > * {
  color: rgb(8, 65, 131);
}

.main-container .controls .rotate-top-to-left > * {
  position: absolute;
  top: calc(var(--cube-size) * 0.25);
  right: calc(var(--cube-size) * 0.35);
  transform: rotateY(-40deg) rotateZ(-90deg);
}

.main-container .controls .rotate-top-to-right > * {
  position: absolute;
  top: calc(var(--cube-size) * 0.25);
  left: calc(var(--cube-size) * 0.35);
  transform: rotateY(-40deg) rotateZ(-90deg);
}

.main-container .controls .rotate-left-to-top > * {
  position: absolute;
  bottom: calc(var(--cube-size) * 0.25);
  left: calc(var(--cube-size) * 0.45);
  transform: rotateX(45deg) rotateZ(140deg);
}

.main-container .controls .rotate-right-to-top > * {
  position: absolute;
  bottom: calc(var(--cube-size) * 0.25);
  right: calc(var(--cube-size) * 0.45);
  transform: rotateX(45deg) rotateZ(40deg);
}

.main-container .controls .rotate-right > * {
  position: absolute;
  bottom: calc(var(--cube-size) * 0.5);
  left: calc(var(--cube-size) * 0.8);
  transform: rotateZ(150deg) rotateX(30deg);
}

.main-container .controls .rotate-left > * {
  position: absolute;
  bottom: calc(var(--cube-size) * 0.5);
  right: calc(var(--cube-size) * 0.8);
  transform: rotateZ(30deg) rotateX(30deg);
}

@media screen and (max-width: 700px) {
  .main-container {
    --cube-size: min(50vh, 50vw);
  }
}
